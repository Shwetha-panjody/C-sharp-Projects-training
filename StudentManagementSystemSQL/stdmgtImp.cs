using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Data.SqlClient;
using System.Linq;
using System.Numerics;
using System.Runtime.Intrinsics.Arm;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace StudentManagementSystemSQL
{
    internal class StudentManagementSystemImplimentation : StudentManagementSystem
    {

        static SqlConnection conn;
        private static void createconn()
        {
            Console.WriteLine("Getting Connection ...");

            //--please give your
            //servername in data source and
            //dabase name in Catalog and
            //create table within that database using student2.sql file
            //which is present in StudentManagementSystemSQL folder

            string connString = "Data Source=;Initial Catalog=;Integrated Security=True;";

            //   string connString = "Data Source=AUTOXUTZME1HRZM;Initial Catalog=studentmgtsys;Integrated Security=True;";

            conn = new SqlConnection(connString);

        }
        public void addStudent()
        {
            createconn();
            try
            {
                Console.WriteLine("Openning Connection ...");

                //open connection
                conn.Open();

                Console.WriteLine("Connection successful!");
            }
            catch (Exception e)
            {
                Console.WriteLine("Error: " + e.Message);
            }

            //    Console.ReadLine();
            Console.WriteLine("Enter Student name");
            String name = Console.ReadLine()+"";

            int cl = studentClassNo();
            
            Console.WriteLine("Enter Student mark in Science");
            double mark1 = scoreWithin100();
            mark1 = Math.Round(mark1, 2);

            Console.WriteLine("Enter Student mark in Math");
            double mark2 = scoreWithin100();
            mark2 = Math.Round(mark2, 2);

            Console.WriteLine("Enter Student mark in Computer Skill");
            double mark3 = scoreWithin100();
            mark3 = Math.Round(mark3, 2);

            //---------------------generate reg no-----------------------------
            // reg no formate =   school name + class + auto incremeant number starts from 101

            SqlCommand clExist = new SqlCommand("select count(*) from Student2 where class='"+cl+"'", conn);

            int classcount = 0;

            classcount = (int)clExist.ExecuteScalar();

            String newRegNo = "";

            //------checking if given class data present in DB take previous class regno else generate new reg no------------
            if (classcount == 0)
            {
                newRegNo = "EGDK" + cl + "" + 101;
            }
            else
            {
                SqlCommand latestRegnoingivenclass = new SqlCommand("select max(regno) from Student2 where class='" + cl + "'", conn);

                String prevRegno = "";


                prevRegno = latestRegnoingivenclass.ExecuteScalar().ToString();


                int RegNo = Convert.ToInt32(prevRegno.Substring(5)) + 1;

                newRegNo = "EGDK" + cl + "" + RegNo;
            }

            SqlCommand cmd = new SqlCommand("INSERT INTO Student2 (regno, name, class,science,math,computer) " +
                "VALUES('" + newRegNo + "','" + name + "','" + cl + "','" + mark1 + "','" + mark2 + "','" + mark3 + "')",conn); 
            
            if(cmd.ExecuteNonQuery() > 0)
            {
                Console.WriteLine("Student data added successfully!! remember newly autogenerated ROLL NO {0}", newRegNo);
            }
            conn.Close();
            Console.WriteLine("----------------------------------------------------------------------------------------------------------");
        }

        public double scoreWithin100()
        {
            bool f = true;
            double r = 0.0;
            while (f)
            {
                r = Convert.ToDouble(Console.ReadLine());
                if(r >= 1 && r <= 100)
                {
                    f= false;
                }
                else
                {
                    Console.WriteLine("enter marks within 0 to 100");
                }
            }
            return r;
        }
        public int studentClassNo()
        {
            int cl = 0;
            bool f = true;
            while (f)
            {
                Console.WriteLine("Select Student class\n----------------------");
                Console.WriteLine("1.First std(1st)\n2.Second std(2nd)\n3.Third std(3rd)\n4.Fourth std(4th)\n5.Fifth std(5th)");
                Console.WriteLine("6.First std(6th)\n7.Second std(7th)");
                cl = Convert.ToInt32(Console.ReadLine());

                switch (cl)
                {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        f = false;
                        break;

                    default:
                        Console.WriteLine("Select data from given option only");
                        break;
                }
            }
            return cl;

        }
        public void deleteStudent()
        {
            createconn();

            try
            {
                conn.Open();
            }
            catch(Exception ex) { 
                Console.WriteLine("Error: " + ex.Message); 
            }
            Console.WriteLine("Enter Student Regno which want to Delete");
            String id = Console.ReadLine().ToUpper();

            SqlCommand regNoExist = new SqlCommand("select count(*) from student2 where regno='"+id+"'",conn);

            int count = (int)regNoExist.ExecuteScalar();

            if (count == 0)
            {
                Console.WriteLine("There is No Student who has Reg no - {0}, please check the given Reg No", id);
            }
            else
            {
                SqlCommand cmd = new SqlCommand("delete from student2 where regno='"+id+"'", conn);
                if(cmd.ExecuteNonQuery() > 0)
                {
                    Console.WriteLine("Student {0} removed from DB successfully", id);
                }
                else
                {
                    Console.WriteLine("Student {0} not removed yet from DB",id);
                }
                
            }

            conn.Close();

            Console.WriteLine("----------------------------------------------------------------------------------------------------------");

        }

        public void SearchStudent()
        {
            createconn();

            try
            {
                conn.Open();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
            }

            Console.WriteLine("Enter Student Reg No which want to Search");
            String id = Console.ReadLine().ToUpper();

            SqlCommand regNoExist = new SqlCommand("select count(*) from student2 where regno='" + id + "'", conn);

            int count = (int)regNoExist.ExecuteScalar();
            Console.WriteLine("----------------------------------------------------------------------------------------------------------");
            if (count == 0)
            {
                Console.WriteLine("There is No Student with Reg no {0}", id);
            }
            else
            {
                Console.WriteLine("REGNO\t\t\tNAME\t\tCLASS\t\tSCIENCE\t\tMATHS\t\tCOMPUTER SKILL");

                SqlCommand cmd = new SqlCommand("select * from student2 where regno='"+id+"'",conn);

                SqlDataReader stdFound = cmd.ExecuteReader();

                while(stdFound.Read())
                {
                    Console.WriteLine(stdFound.GetString(1) + "\t\t" + stdFound.GetString(2) + "\t\t" + stdFound.GetInt32(3) + "\t\t" + stdFound.GetDecimal(4) + "\t\t" + stdFound.GetDecimal(5) + "\t\t" + stdFound.GetDecimal(6));
                }
            }
            conn.Close();
            Console.WriteLine("----------------------------------------------------------------------------------------------------------");

        }

        public void showAllStudent()
        {
            createconn();
            try
            {
                Console.WriteLine("Openning Connection ...");

                //open connection
                conn.Open();

                Console.WriteLine("Connection successful!");
            }
            catch (Exception e)
            {
                Console.WriteLine("Error: " + e.Message);
            }

            SqlCommand countrow = new SqlCommand("select count(*) from Student2", conn);
            int count = 0;

            count = (int)countrow.ExecuteScalar();

            Console.WriteLine("----------------------------------------------------------------------------------------------------------");
            //no data in DB
            if (count != 0)
            {

                Console.WriteLine("REGNO\t\t\tNAME\t\tCLASS\t\tSCIENCE\t\tMATHS\t\tCOMPUTER SKILL");

                SqlCommand cmd = new SqlCommand("select * from Student2",conn);

                SqlDataReader studentdatalist = cmd.ExecuteReader();

                while (studentdatalist.Read())
                {
                    //   var stdid = studentdatalist.GetString(0); // primary key value. which dont want to display

                    Console.WriteLine(studentdatalist.GetString(1) + "\t\t"+ studentdatalist.GetString(2) + "\t\t"+ studentdatalist.GetInt32(3) + "\t\t"+ studentdatalist.GetDecimal(4) + "\t\t"+ studentdatalist.GetDecimal(5) + "\t\t"+ studentdatalist.GetDecimal(6));
                    
                }
            }
            else
            {
                Console.WriteLine("There is No Student Data avaliable currently");
            }


            conn.Close();

            Console.WriteLine("----------------------------------------------------------------------------------------------------------");

        }

        public void TotalNAvg()
        {
            createconn();
            try
            {
                conn.Open();
            }
            catch (Exception e)
            {
                Console.WriteLine("Error: " + e.Message);
            }

            SqlCommand stdcount = new SqlCommand("select count(*) from student2", conn);

            int count = (int)stdcount.ExecuteScalar();
            Console.WriteLine("--------------------------------------------------------------------------------------------------------------------------------");
            if (count != 0)
            {
                Console.WriteLine("REGNO\t\t\tNAME\t\tCLASS\t\tSCIENCE\t\tMATHS\t\tCOMPUTER\tTOTAL\t\tAVERAGE");

                SqlCommand std = new SqlCommand("select * from student2", conn);

                SqlDataReader studentdatalist = std.ExecuteReader();

                while(studentdatalist.Read())
                {
                    decimal total = studentdatalist.GetDecimal(4) + studentdatalist.GetDecimal(5) + studentdatalist.GetDecimal(6);
                    Console.WriteLine(studentdatalist.GetString(1) + "\t\t" + studentdatalist.GetString(2) + "\t\t" + studentdatalist.GetInt32(3) + "\t\t" + studentdatalist.GetDecimal(4) + "\t\t" + studentdatalist.GetDecimal(5) + "\t\t" + studentdatalist.GetDecimal(6) + "\t\t" + total + "\t\t" + Math.Round(total / 3));
                }
            }
            else
            {
                Console.WriteLine("There is No Student Data avaliable currently");
            }

            conn.Close() ;
            Console.WriteLine("---------------------------------------------------------------------------------------------------------------------------------");

        }

        public void TotalStudentInEGDB()
        {
            createconn();
            try
            {
                conn.Open();
            }
            catch (Exception e) { 
                Console.WriteLine("Error: " + e.Message); 
            }

            SqlCommand stdcount = new SqlCommand("select count(*) from student2", conn);

            int count = (int)stdcount.ExecuteScalar();

            Console.WriteLine("Total Students in EGDK DataBase is {0}", count);

            conn.Close();
            Console.WriteLine("----------------------------------------------------------------------------------------------------------");

        }

        public void UpdateStudent()
        {
            createconn();
            try
            {
                conn.Open();
            }
            catch (Exception e)
            {
                Console.WriteLine("Error: " + e.Message);
            }

            Console.WriteLine("Enter Student Reg No whom you want to edit data");
            String id = Console.ReadLine().ToUpper();

            SqlCommand regNoExist = new SqlCommand("select count(*) from student2 where regno='" + id + "'", conn);

            int count = (int)regNoExist.ExecuteScalar();

            if (count == 0)
            {
                Console.WriteLine("There is No Student with Reg no {0}", id);
            }
            else
            {
                Console.WriteLine("choose what kind of data want to change ?\n---------------------");
                Console.WriteLine("1.Name\n2.Class\n3.Science score\n4.Math score\n5.Computer Skill score\n---------------------");
                int dataWantToChange = Convert.ToInt32(Console.ReadLine());

                SqlCommand updateData = null;

                //-------------------------------------------------------------------------------------

                SqlCommand cmd = new SqlCommand("select * from student2 where regno='"+id+"'",conn);
                SqlDataReader currentData = cmd.ExecuteReader();

                string oldregno="", oldname="";
                int oldcl=0;
                decimal oldscience=0, oldmath=0, oldcomputer=0 ;

                while (currentData.Read())
                {
                     oldregno = currentData.GetString(1);
                     oldname = currentData.GetString(2);
                     oldcl = currentData.GetInt32(3);
                     oldscience = currentData.GetDecimal(4);
                     oldmath = currentData.GetDecimal(5);
                     oldcomputer = currentData.GetDecimal(6);
                }
                currentData.Close();
                //--------------------------------------------------------------------------------------


                switch (dataWantToChange)
                {
                    case 1:
                        Console.WriteLine("Enter new Name");
                        string name = Console.ReadLine() + "";
                        updateData = new SqlCommand("update student2 set name='"+name+"' where regno='"+id+"'", conn);
                        if(updateData.ExecuteNonQuery() > 0)
                        {
                            Console.WriteLine("Name {0} is changed to {1}", oldname, name);
                        }
                        else
                        {
                            Console.WriteLine("Name {0} is not changed to {1}", oldname, name);
                        }
                        break;

                    case 2:
                        int cl = studentClassNo();  //new class

                        SqlCommand clExist = new SqlCommand("select count(*) from Student2 where class='" + cl + "'", conn);

                        int classcount = 0;

                        classcount = (int)clExist.ExecuteScalar();

                        String newRegNo = "";

                        //------checking if given class data present in DB take previous class regno else generate new reg no------------
                        if (classcount == 0)
                        {
                            newRegNo = "EGDK" + cl + "" + 101;
                        }
                        else
                        {
                            SqlCommand latestRegnoingivenclass = new SqlCommand("select max(regno) from Student2 where class='" + cl + "'", conn);

                            String prevRegno = "";


                            prevRegno = latestRegnoingivenclass.ExecuteScalar().ToString();


                            int RegNo = Convert.ToInt32(prevRegno.Substring(5)) + 1;

                            newRegNo = "EGDK" + cl + "" + RegNo;
                        }

                        updateData = new SqlCommand("update student2 set regno='" + newRegNo + "', class='"+cl+"' where regno='" + id + "'", conn);
                        if (updateData.ExecuteNonQuery() > 0)
                        {
                            Console.WriteLine("Class {0} is changed to {1} and new regno {2} generated by replacing {3}", oldcl,cl,newRegNo,oldregno);
                        }
                        else
                        {
                            Console.WriteLine("Class {0} is not changed to {1}",oldregno, cl);
                        }

                        break;

                    case 3:
                        Console.WriteLine("Enter new Scienece score");
                        double m1 = scoreWithin100();
                        m1 = Math.Round(m1, 2);
                        updateData = new SqlCommand("update student2 set science='" + m1 + "' where regno='" + id + "'", conn);
                        if (updateData.ExecuteNonQuery() > 0)
                        {
                            Console.WriteLine("science score {0} is changed to {1}", oldscience, m1);
                        }
                        else
                        {
                            Console.WriteLine("science score {0} is not changed to {1}", oldscience, m1);
                        }
                        break;

                    case 4:
                        Console.WriteLine("Enter new Maths score");
                        double m2 = scoreWithin100();
                        m2 = Math.Round(m2, 2);
                        updateData = new SqlCommand("update student2 set math='" + m2 + "' where regno='" + id + "'", conn);
                        if (updateData.ExecuteNonQuery() > 0)
                        {
                            Console.WriteLine("math score {0} is changed to {1}", oldmath, m2);
                        }
                        else
                        {
                            Console.WriteLine("math score {0} is not changed to {1}", oldmath, m2);
                        }
                        break;

                    case 5:
                        Console.WriteLine("Enter new Computer Skill score");
                        double m3 = scoreWithin100();
                        m3 = Math.Round(m3, 2);
                        updateData = new SqlCommand("update student2 set science='" + m3 + "' where regno='" + id + "'", conn);
                        if (updateData.ExecuteNonQuery() > 0)
                        {
                            Console.WriteLine("Computer skill score {0} is changed to {1}", oldcomputer, m3);
                        }
                        else
                        {
                            Console.WriteLine("Computer skill score {0} is not changed to {1}", oldcomputer, m3);
                        }
                        break;

                    default:
                        Console.WriteLine("Invalied option");
                        break;
                }
            }

            conn.Close();
            Console.WriteLine("----------------------------------------------------------------------------------------------------------");

        }

    }
}
